name: Release a Docker image
on:
  workflow_call:
    inputs:
      dockerhub_username:
        description: "The Docker Hub username"
        required: true
        type: string
      enable_docs:
        description: "Whether to generate Jekyll documentation"
        required: false
        type: boolean
        default: true
    secrets:
      dockerhub_password:
        description: "The Docker Hub password"
        required: true

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        timeout-minutes: 2
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
        timeout-minutes: 5
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp
      - name: Import Docker image
        run: docker load -i /tmp/docker-image
      - name: Log in to Docker Hub
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}
        timeout-minutes: 1

      - uses: ruby/setup-ruby@v1
        if: ${{ inputs.enable_docs == true }}
        with:
          ruby-version: '2.5'
          bundler-cache: true
      - name: Generate Jekyll docs
        if: ${{ inputs.enable_docs == true }}
        run: bundle exec jekyll build
        working-directory: docs
      - name: Save documentation as artefact
        uses: actions/upload-pages-artifact@v3
        if: inputs.enable_docs == true && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          path: ./build/docs

      - name: Log in to GitHub Container Registry
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        timeout-minutes: 1
      - name: Publish Docker image
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 18.0.1
          extra_plugins: |
            @semantic-release/exec@^6.0.3
            @semantic-release/git@^10.0.1
            @semantic-release/changelog@6.0.1
            conventional-changelog-conventionalcommits@4.6.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_pages:
    name: Publish documentation
    needs: release
    if: inputs.enable_docs == true && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

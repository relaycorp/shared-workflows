name: CI
on:
  workflow_call:
    inputs:
      docker_image_local_name:
        description: "The local name of the Docker image"
        required: true
        type: string
      dockerhub_username:
        description: "The Docker Hub username"
        required: true
        type: string
      kubernetes_version:
        description: "The version of Kubernetes"
        required: false
        default: 1.25.3
        type: string
      knative_version:
        description: "The version of Knative"
        required: false
        default: 1.9.0
        type: string
      knative_eventing_enabled:
        description: "Whether Knative Eventing is enabled"
        required: false
        default: true
        type: boolean
      skaffold_version:
        description: "The version of Skaffold"
        required: false
        default: 2.1.0
        type: string
    secrets:
      dockerhub_password:
        description: "The Docker Hub password"
        required: true

jobs:
  ci:
    runs-on: buildjet-8vcpu-ubuntu-2204
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        timeout-minutes: 2
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
        timeout-minutes: 5
      - name: npm ci
        uses: nick-fields/retry@v2
        with:
          command: npm ci
          timeout_minutes: 3
          max_attempts: 3
        timeout-minutes: 10
      - run: npm run static-checks
        timeout-minutes: 3
      - run: npm test
        timeout-minutes: 5

      # Functional tests
      - name: Create cluster
        uses: medyagh/setup-minikube@v0.0.18
        with:
          minikube-version: '1.30.1'
          kubernetes-version: 'v${{ inputs.kubernetes_version }}'
          cpus: max
          memory: 6000m
        timeout-minutes: 5
      - name: Setup Knative
        run: |-
          set -o nounset
          set -o errexit
          set -o pipefail

          echo "Installing kn..."
          curl -L \
            -o /usr/local/bin/kn \
            https://github.com/knative/client/releases/download/knative-v${KN_VERSION}/kn-linux-amd64
          chmod +x /usr/local/bin/kn

          echo "Installing kn-quickstart..."
          curl -L \
            -o /usr/local/bin/kn-quickstart \
            https://github.com/knative-sandbox/kn-plugin-quickstart/releases/download/knative-v${KN_VERSION}/kn-quickstart-linux-amd64
          chmod +x /usr/local/bin/kn-quickstart

          kn quickstart minikube \
            --kubernetes-version=${KUBERNETES_VERSION} \
            --install-serving \
            --install-eventing

          minikube tunnel -p knative >>/tmp/minikube-tunnel.logs 2>&1 &
        env:
          KN_VERSION: ${{ inputs.knative_version }}
          KUBERNETES_VERSION: ${{ inputs.kubernetes_version }}
        timeout-minutes: 10
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.dockerhub_username }}
          password: ${{ secrets.dockerhub_password }}
        timeout-minutes: 2
      - name: Install Skaffold
        run: |-
          set -o nounset
          set -o errexit
          set -o pipefail

          curl -L \
            -o /usr/local/bin/skaffold \
            "https://storage.googleapis.com/skaffold/releases/v${SKAFFOLD_VERSION}/skaffold-linux-amd64"

          chmod +x /usr/local/bin/skaffold
          skaffold config set --global collect-metrics false
        env:
          SKAFFOLD_VERSION: ${{ inputs.skaffold_version }}
        timeout-minutes: 2
      - run: skaffold run
        timeout-minutes: 10
      - name: Wait for Kubernetes resources
        run: |-
          set -o nounset
          set -o errexit
          set -o pipefail
          set -x

          function kubectl-wait() {
            local resource="$1"
            local condition="$2"
            local timeout="${3:-5m}"
            kubectl wait "$resource" "--for=condition=$condition" "--timeout=$timeout" --all
          }
          function kubectl-wait-if-present() {
            local resource="$1"
            local condition="$2"
            if kubectl get "$resource" --ignore-not-found | grep -q .; then
              kubectl-wait "$resource" "$condition"
            fi
          }

          sleep 30s # Knative can be painfully slow to create the necessary resources

          # Check our resources first to give Knative Eventing even more time
          kubectl-wait-if-present job complete
          kubectl-wait service.serving.knative.dev ready 10m

          if [[ "${KNATIVE_EVENTING_ENABLED}" == "true" ]]; then
            kubectl-wait broker.eventing.knative.dev ready
            kubectl-wait trigger.eventing.knative.dev ready 10m
          fi
        env:
          KNATIVE_EVENTING_ENABLED: ${{ inputs.knative_eventing_enabled }}
        timeout-minutes: 10
      - name: Functional tests
        timeout-minutes: 5
        run: npm run test:functional

      # Export Docker image so it can be published
      - name: Export Docker image
        run: |-
          set -o nounset
          set -o errexit
          set -o pipefail

          eval $(minikube docker-env -p knative)

          DOCKER_IMAGE_TAG="$(docker images "${{ inputs.docker_image_local_name }}" --format '{{.Tag}}' | tail -1)"
          docker tag "${{ inputs.docker_image_local_name }}:${DOCKER_IMAGE_TAG}" "${GITHUB_REPOSITORY}:ci"
          docker save -o /tmp/docker-image "${GITHUB_REPOSITORY}:ci"
        timeout-minutes: 3
      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: /tmp/docker-image
        timeout-minutes: 5

      - name: Output diagnostic information upon failure
        if: failure()
        run: |-
          set -o nounset
          set -o errexit
          set -o pipefail

          # Functions

          print_header() {
            local title="$1"

            echo
            printf '#%.0s' {1..50}
            echo " ${title}"
          }

          # Main

          print_header "Local Docker images"
          docker images

          print_header "Minikube Docker mages"
          eval $(minikube docker-env -p knative)
          docker images
          eval $(minikube docker-env -p knative --unset)

          print_header "Knative services"
          kn service list || true

          print_header "Kubernetes resources"
          kubectl get all --all-namespaces

          print_header "App pods"
          kubectl describe pod

          print_header "App logs"
          for pod in $(kubectl get pods -o name -n default); do
            kubectl logs $pod --prefix -n default --all-containers=true --timestamps=true
          done

          print_header "Knative Eventing"
          kubectl describe pod -n knative-eventing
          for pod in $(kubectl get pods -o name -n knative-eventing); do
            kubectl logs $pod --prefix -n knative-eventing --all-containers=true --timestamps=true
          done

          print_header "Minikube tunnel logs"
          cat /tmp/minikube-tunnel.logs

          print_header "Minikube status"
          minikube status -p knative
        timeout-minutes: 2
